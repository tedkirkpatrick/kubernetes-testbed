# Install Jaeger tracing tool
# Set jaeger Service as LoadBalancer to allow direct ingress
# This file based upon
#  https://raw.githubusercontent.com/istio/istio/release-1.7/samples/addons/jaeger.yaml
# Changes: 
# 1. Setting Service as LoadBalancer
# 2. Setting SPAN_STORAGE_TYPE as "memory"
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: istio-system
  labels:
    app: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
    spec:
      containers:
        - name: jaeger
          image: "docker.io/jaegertracing/all-in-one:1.18"
          env:
            # When badger is specified as the storage backend,
            # the Jaeger all-in-one executable grows without limit
            # until the OS kills it via OutOfMemory or (if
            # resources.limits.memory is unspecified the) kubelet
            # evicts it due to memory pressure on the Node.
            # Specify "memory" as the storage backend, a container
            # memory limit, and limit the the max traces to fit the container.
            #- name: SPAN_STORAGE_TYPE
            #  value: "badger"
            #- name: BADGER_EPHEMERAL
            #  value: "false"
            #- name: BADGER_DIRECTORY_VALUE
            #  value: "/badger/data"
            #- name: BADGER_DIRECTORY_KEY
            #  value: "/badger/key"
            - name: COLLECTOR_ZIPKIN_HTTP_PORT
              value: "9411"
            - name: SPAN_STORAGE_TYPE
              value: "memory"
            - name: MEMORY_MAX_TRACES
              value: "10000"
            - name: QUERY_BASE_PATH
              value: /jaeger
          livenessProbe:
            httpGet:
              path: /
              port: 14269
          readinessProbe:
            httpGet:
              path: /
              port: 14269
          volumeMounts:
            - name: data
              mountPath: /badger
          resources:
            requests:
              cpu: 10m
            limits:
              memory: 700Mi
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: tracing
  namespace: istio-system
  labels:
    app: jaeger
spec:
  type: LoadBalancer
  ports:
    - name: http-query
      port: 80
      protocol: TCP
      targetPort: 16686
  selector:
    app: jaeger
---
# Jaeger implements the Zipkin API. To support swapping out the tracing backend, we use a Service named Zipkin.
apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: zipkin
  namespace: istio-system
spec:
  ports:
    - port: 9411
      targetPort: 9411
      name: http-query
  selector:
    app: jaeger